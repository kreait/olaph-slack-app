# This is a basic workflow to help you get started with Actions

name: PullRequests

# Controls when the action will run. 
on:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:

    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.2.11
        ports:
          - 27017:27017

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '15'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Unit Test
        run: |
          ./gradlew unitTest jacocoTestReport

      - name: Integration Test
        env:
          SLACK_APP_CLIENT_ID: ${{ secrets.SLACK_APP_CLIENT_ID }}
          SLACK_APP_CLIENT_SECRET: ${{ secrets.SLACK_APP_CLIENT_SECRET }}
          SLACK_APP_SIGNING_SECRET: ${{ secrets.SLACK_APP_SIGNING_SECRET }}
          AWS_ENDPOINT: ${{ secrets.AWS_ENDPOINT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

        run: |
          ./gradlew integrationTest jacocoTestReport -Dcloud.aws.endpoint=$AWS_ENDPOINT -Dcloud.aws.credentials.accessKey=$AWS_ACCESS_KEY_ID -Dcloud.aws.credentials.secretKey=$AWS_SECRET_ACCESS_KEY -Dcloud.aws.region.static=$AWS_REGION

      - name: Sonarcloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube -Dsonar.login=$SONAR_TOKEN
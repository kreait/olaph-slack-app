buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.0.RELEASE")
    }
    ext {
        olaphVersion = "2.0.0"
        junitJupiterVersion = "5.3.1"
        junitPlatformVersion = "1.3.1"
        springBootVersion = "2.1.0.RELEASE"
        projectVersion = "1.0.0"
        kotlinVersion = "1.2.40"
        olaphDtoVersion = "1.0.10"
    }
}

plugins {
    id("jacoco")
    id("idea")
    id("io.spring.dependency-management").version("1.0.7.RELEASE")
    id("org.sonarqube").version("2.7")
    id("org.jetbrains.kotlin.jvm").version("1.3.21")
    id("org.jetbrains.kotlin.plugin.spring").version("1.3.21")
    id("org.springframework.boot").version("2.1.0.RELEASE")
}

group = "com.kreait.bots.slack"
version = "0.0.1.BUILD-SNAPSHOT"

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom("software.amazon.awssdk:bom:2.0.0")
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Agile Bot"
        property "sonar.projectKey", "com.kreait.bots.slack.agile"
        property "sonar.host.url", "https://sonarcloud.io/"
        property "sonar.organization", "kreait"
        property "sonar.jacoco.report missing.force.zero", "true"
        //property "sonar.exclusions", "**/akamai/**"
    }
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }

}

tasks.withType(Test) {
    systemProperties = System.properties
}

apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"

bootRun {
    systemProperties System.properties
}

test {
    useJUnitPlatform()
}


def test = tasks.named("test") {
    useJUnitPlatform {
        excludeTags "integration"
    }
}

def integrationTest = tasks.register("unitTest", Test) {
    useJUnitPlatform {
        includeTags "Unit"
    }
    shouldRunAfter test
}

repositories {
    maven { url "https://libs.olaph.io" }
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/comkreaitslack-1032"
    }
}

dependencies {
    implementation(group: "com.kreait.slack", name: "slack-spring-boot-starter", version: "${olaphVersion}", changing: true)
    implementation(group: "com.kreait.slack", name: "slack-spring-api-client", version: "${olaphVersion}", changing: true)
    implementation(group: "com.kreait.bots.olaph", name: "jackson", version: olaphDtoVersion)

    implementation(group: "org.springframework.boot", name: "spring-boot-starter-web")
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-data-mongodb")
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-actuator")

    implementation(group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin")
    implementation(group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8")
    implementation(group: "org.jetbrains.kotlin", name: "kotlin-reflect")
    implementation(group: "org.springframework", name: "spring-jms")

    //caching
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-cache")
    implementation(group: "com.github.ben-manes.caffeine", name: "caffeine")

    implementation(group: "org.springframework.cloud", name: "spring-cloud-starter-aws-messaging", version: "2.0.0.RELEASE")
    implementation(group: "org.springframework.cloud", name: "spring-cloud-starter-aws", version: "2.0.0.RELEASE")
    implementation(group: "io.micrometer", name: "micrometer-registry-cloudwatch")


    testImplementation(group: "com.kreait.bots.olaph", name: "jackson-test", version: olaphDtoVersion)

    testImplementation(group: "com.kreait.slack", name: "slack-spring-test-api-client", version: "${olaphVersion}")
    testImplementation(group: "com.kreait.slack", name: "slack-jackson-dto-test", version: "${olaphVersion}")

    testImplementation(group: "org.springframework.boot", name: "spring-boot-starter-test") {
        exclude(group: "junit", module: "junit")
    }
    testImplementation(group: "io.rest-assured", name: "rest-assured", version: "3.3.0")
    testImplementation(group: "com.nhaarman.mockitokotlin2", name: "mockito-kotlin", version: "2.0.0")

    testImplementation(group: "org.junit.jupiter", name: "junit-jupiter-params", version: "${junitJupiterVersion}")
    testImplementation(group: "org.junit.jupiter", name: "junit-jupiter-api", version: "${junitJupiterVersion}")
    testRuntime(group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "${junitJupiterVersion}")
    testImplementation(group: "org.junit.platform", name: "junit-platform-runner", version: "${junitPlatformVersion}") {
        exclude(group: "junit", module: "junit")
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

wrapper {
    gradleVersion = "5.3"
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.0.RELEASE")
    }
    ext {
        olaphVersion = "3.0.0-SNAPSHOT"
        springBootVersion = "2.3.0.RELEASE"
        projectVersion = "1.0.0"
        kotlinVersion = "1.4.20"
    }
}

plugins {
    id("jacoco")
    id("idea")
    id("io.spring.dependency-management").version("1.0.7.RELEASE")
    id("org.sonarqube").version("3.0")
    id("org.jetbrains.kotlin.jvm").version("1.4.20")
    id("org.jetbrains.kotlin.plugin.spring").version("1.4.20")
    id("org.springframework.boot").version("2.3.0.RELEASE")
}

group = "com.kreait.bots.slack"
version = "0.0.1.BUILD-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom("software.amazon.awssdk:bom:2.0.0")
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_15.toString()
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_15.toString()
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Olaph Slack App"
        property "sonar.projectKey", "olaph-io_slack-app"
        property "sonar.host.url", "https://sonarcloud.io/"
        property "sonar.organization", "olaph-io"
        property "sonar.login", "f2cc9344b5efa26ca634ecf95805cdd120455967"
        property "sonar.jacoco.report.missing.force.zero", "true"

        //property "sonar.exclusions", "**/akamai/**"
    }
}

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }

}

tasks.withType(Test) {
    systemProperties = System.properties
}

apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"

bootRun {
    systemProperties System.properties
}

test {
    useJUnitPlatform()
}

tasks.register("unitTest", Test) {
    useJUnitPlatform {
        includeTags "Unit"
    }
}

tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        includeTags "Integration"
    }
}

repositories {
    mavenCentral()
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    implementation(group: "com.kreait.slack", name: "slack-spring-boot-starter", version: "${olaphVersion}", changing: true)
    implementation(group: "com.kreait.slack", name: "slack-spring-api-client", version: "${olaphVersion}", changing: true)

    implementation(group: "org.springframework.boot", name: "spring-boot-starter-web")
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-data-mongodb")
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-actuator")

    implementation(group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin")
    implementation(group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8")
    implementation(group: "org.jetbrains.kotlin", name: "kotlin-reflect")
    implementation(group: "org.springframework", name: "spring-jms")

    //caching
    implementation(group: "org.springframework.boot", name: "spring-boot-starter-cache")
    implementation(group: "com.github.ben-manes.caffeine", name: "caffeine")

    implementation(group: "org.springframework.cloud", name: "spring-cloud-starter-aws-messaging", version: "2.2.5.RELEASE")
    implementation(group: "org.springframework.cloud", name: "spring-cloud-starter-aws", version: "2.2.5.RELEASE")
    implementation(group: "io.micrometer", name: "micrometer-registry-cloudwatch")

    testImplementation(group: "com.kreait.slack", name: "slack-spring-test-api-client", version: "${olaphVersion}")
    testImplementation(group: "com.kreait.slack", name: "slack-jackson-dto-test", version: "${olaphVersion}")

    testImplementation(group: "org.springframework.boot", name: "spring-boot-starter-test") {
        exclude(group: "junit", module: "junit")
        exclude(group: "org.junit.vintage", module: "junit-vintage-engine")
    }
    testImplementation(group: "io.rest-assured", name: "rest-assured", version: "3.3.0")
    testImplementation(group: "com.nhaarman.mockitokotlin2", name: "mockito-kotlin", version: "2.0.0")

}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

wrapper {
    gradleVersion = "6.7"
}
